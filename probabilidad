<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Distribución de la suma Z</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: #f4f6f8;
      color: #333;
      padding: 30px;
    }

    h2, h3 {
      color: #2c4d50;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      background-color: #fff;
    }

    th, td {
      border: 1px solid #ccc;
      padding: 10px;
      text-align: center;
    }

    th {
      background-color: #dbb334;
      color: white;
    }

    tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    canvas {
      margin-top: 30px;
    }

    button {
      padding: 8px 16px;
      font-size: 16px;
      background-color: rgb(185, 165, 41);
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    button:hover {
      background-color: #801c7d;
    }
  </style>
</head>
<body>
  <h2>Distribución de Probabilidad</h2>
  <p><strong>Urna:</strong> pelotas numeradas del 1 al 4. Se realizan 30 extracciones aleatorias de 2 pelotas sin reemplazo en cada experimento.</p>
  <button onclick="generarDistribucion()">Generar Experimentos</button>

  <div id="tablaExperimentos"></div>
  <div id="tablaResumen"></div>
  <canvas id="graficoZ" width="600" height="400"></canvas>

  <script>
    let chart;

    function generarDistribucion() {
      const numPelotas = 4;
      const numExperimentos = 30;
      const resultados = [];
      const conteoSuma = {};

      // Realizar 30 experimentos
      for (let i = 0; i < numExperimentos; i++) {
        const urna = [1, 2, 3, 4];
        const pelotaA = urna.splice(Math.floor(Math.random() * urna.length), 1)[0];
        const pelotaB = urna.splice(Math.floor(Math.random() * urna.length), 1)[0];
        const suma = pelotaA + pelotaB;

        resultados.push({ experimento: i + 1, pelotaA, pelotaB, suma });

        conteoSuma[suma] = (conteoSuma[suma] || 0) + 1;
      }

      // Mostrar tabla de experimentos
      let tablaExpHTML = `<h3>Tabla de Experimentos</h3><table><tr><th>#</th><th>Pelota A</th><th>Pelota B</th><th>Suma Z</th></tr>`;
      resultados.forEach(r => {
        tablaExpHTML += `<tr><td>${r.experimento}</td><td>${r.pelotaA}</td><td>${r.pelotaB}</td><td>${r.suma}</td></tr>`;
      });
      tablaExpHTML += `</table>`;
      document.getElementById("tablaExperimentos").innerHTML = tablaExpHTML;

      // Mostrar tabla de frecuencias y probabilidades
      let tablaResumenHTML = `<h3>Frecuencia y Probabilidad</h3><table><tr><th>Suma Z</th><th>Frecuencia</th><th>Probabilidad</th></tr>`;
      const etiquetas = [];
      const probabilidades = [];

      Object.keys(conteoSuma).sort((a, b) => a - b).forEach(suma => {
        const frecuencia = conteoSuma[suma];
        const prob = (frecuencia / numExperimentos).toFixed(3);
        etiquetas.push(`Z = ${suma}`);
        probabilidades.push(prob);
        tablaResumenHTML += `<tr><td>${suma}</td><td>${frecuencia}</td><td>${prob}</td></tr>`;
      });

      tablaResumenHTML += `</table>`;
      document.getElementById("tablaResumen").innerHTML = tablaResumenHTML;

      // Gráfico
      if (chart) {
        chart.destroy();
      }

      const ctx = document.getElementById('graficoZ').getContext('2d');
      chart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: etiquetas,
          datasets: [{
            label: 'Probabilidad estimada',
            data: probabilidades,
            backgroundColor: '#dbb334'
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              max: 1
            }
          }
        }
      });
    }

    // Ejecutar al cargar
    window.onload = generarDistribucion;
  </script>
</body>
</html>
